"use strict";(self.webpackChunkmadoc=self.webpackChunkmadoc||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Laravel Eloquent - R\xe9f\xe9rence","href":"/docs/laravel-eloquent-references","docId":"Laravel-8-Eloquent-references"},{"type":"link","label":"intro","href":"/docs/intro","docId":"intro"}]},"docs":{"intro":{"id":"intro","title":"intro","description":"Choisissez un document dans le menu de gauche.","sidebar":"tutorialSidebar"},"Laravel-8-Eloquent-references":{"id":"Laravel-8-Eloquent-references","title":"Laravel Eloquent - R\xe9f\xe9rence","description":"Dans ce dossier, je vais passer en revue les m\xe9thodes et classes propos\xe9es par l\'ORM (object-relational mapping) Eloquent, choisi par l\'\xe9quipe du framework Laravel. Vous trouverez sur le web des benchmarks qui montrent que les requ\xeates g\xe9n\xe9r\xe9es par Query Builder (lui aussi dans Laravel) sont plus performantes, notamment sur les grosses bases de donn\xe9es (beaucoup de lignes et des jointures complexes) ; mais si votre besoin est plus modeste, Eloquent fera parfaitement le travail et le code sera surtout plus lisible et plus simple \xe0 \xe9crire, ce qui diminue le risque d\'erreur.","sidebar":"tutorialSidebar"}}}')}}]);