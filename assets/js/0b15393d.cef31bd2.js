"use strict";(self.webpackChunkmadoc=self.webpackChunkmadoc||[]).push([[7721],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),u=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,h=c["".concat(i,".").concat(m)]||c[m]||d[m]||s;return r?a.createElement(h,l(l({ref:t},p),{},{components:r})):a.createElement(h,l({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<s;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6189:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const s={slug:"laravel-eloquent-references",title:"Laravel Eloquent - R\xe9f\xe9rence",authors:["benoit"],tags:["Laravel","Eloquent","requ\xeate","base de donn\xe9es"],hide_table_of_contents:!1},l=void 0,o={unversionedId:"Laravel-8-Eloquent-references",id:"Laravel-8-Eloquent-references",title:"Laravel Eloquent - R\xe9f\xe9rence",description:"Dans ce dossier, je vais passer en revue les m\xe9thodes et classes propos\xe9es par l'ORM (object-relational mapping) Eloquent, choisi par l'\xe9quipe du framework Laravel. Vous trouverez sur le web des benchmarks qui montrent que les requ\xeates g\xe9n\xe9r\xe9es par Query Builder (lui aussi dans Laravel) sont plus performantes, notamment sur les grosses bases de donn\xe9es (beaucoup de lignes et des jointures complexes) ; mais si votre besoin est plus modeste, Eloquent fera parfaitement le travail et le code sera surtout plus lisible et plus simple \xe0 \xe9crire, ce qui diminue le risque d'erreur.",source:"@site/docs/Laravel-8-Eloquent-references.md",sourceDirName:".",slug:"/laravel-eloquent-references",permalink:"/docs/laravel-eloquent-references",draft:!1,tags:[{label:"Laravel",permalink:"/docs/tags/laravel"},{label:"Eloquent",permalink:"/docs/tags/eloquent"},{label:"requ\xeate",permalink:"/docs/tags/requete"},{label:"base de donn\xe9es",permalink:"/docs/tags/base-de-donnees"}],version:"current",frontMatter:{slug:"laravel-eloquent-references",title:"Laravel Eloquent - R\xe9f\xe9rence",authors:["benoit"],tags:["Laravel","Eloquent","requ\xeate","base de donn\xe9es"],hide_table_of_contents:!1},sidebar:"tutorialSidebar",next:{title:"intro",permalink:"/docs/intro"}},i={},u=[{value:"Extraire les donn\xe9es",id:"extraire-les-donn\xe9es",level:2},{value:"select() / addSelect() / selectRaw()",id:"select--addselect--selectraw",level:3},{value:"where() / orWhere() / whereIn() / orWhereIn() / whereNotIn() / orWherenotIn()",id:"where--orwhere--wherein--orwherein--wherenotin--orwherenotin",level:3},{value:"whereBetween() / orWhereBetween() / whereNotBetween() / orWhereNotBetween()",id:"wherebetween--orwherebetween--wherenotbetween--orwherenotbetween",level:3},{value:"whereHas()",id:"wherehas",level:3},{value:"whereRaw() / orWhereRaw()",id:"whereraw--orwhereraw",level:3},{value:"whereNull() / wherenotNull()",id:"wherenull--wherenotnull",level:3},{value:"whereDate() / whereMonth() / ...",id:"wheredate--wheremonth--",level:3},{value:"whereExists()",id:"whereexists",level:3},{value:"with() / withCasts",id:"with--withcasts",level:3},{value:"having() / havingBetween() / groupBy() / havingRaw() / orHavingRaw()",id:"having--havingbetween--groupby--havingraw--orhavingraw",level:3},{value:"orderBy() / orderByRaw() / latest() / first() / reorder() / inRandomOrder()",id:"orderby--orderbyraw--latest--first--reorder--inrandomorder",level:3},{value:"load()",id:"load",level:3},{value:"Modifier les donn\xe9es",id:"modifier-les-donn\xe9es",level:2},{value:"create() / createMany()",id:"create--createmany",level:3},{value:"associate() / dissociate()",id:"associate--dissociate",level:3},{value:"save() / saveMany()",id:"save--savemany",level:3},{value:"attach() / detach() / sync() / syncWithoutDetaching() / Toggle()",id:"attach--detach--sync--syncwithoutdetaching--toggle",level:3},{value:"touch() (soft delete)",id:"touch-soft-delete",level:3},{value:"Annexes",id:"annexes",level:2},{value:"Op\xe9rateurs de comparaison",id:"op\xe9rateurs-de-comparaison",level:2},{value:"M\xe9thodes de rappel (<em>callback</em>)",id:"m\xe9thodes-de-rappel-callback",level:2}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Dans ce dossier, je vais passer en revue les m\xe9thodes et classes propos\xe9es par l'ORM (",(0,n.kt)("em",{parentName:"p"},"object-relational mapping"),") ",(0,n.kt)("a",{parentName:"p",href:"https://laravel.com/docs/9.x/eloquent"},"Eloquent"),", choisi par l'\xe9quipe du framework ",(0,n.kt)("a",{parentName:"p",href:"https://laravel.com/"},"Laravel"),". Vous trouverez sur le web des benchmarks qui montrent que les requ\xeates g\xe9n\xe9r\xe9es par Query Builder (lui aussi dans Laravel) sont plus performantes, notamment sur les grosses bases de donn\xe9es (beaucoup de lignes et des jointures complexes) ; mais si votre besoin est plus modeste, Eloquent fera parfaitement le travail et le code sera surtout plus lisible et plus simple \xe0 \xe9crire, ce qui diminue le risque d'erreur."),(0,n.kt)("p",null,"La plupart des m\xe9thodes pr\xe9sent\xe9es ici peuvent \xeatre ",(0,n.kt)("a",{parentName:"p",href:"https://fr.wikipedia.org/wiki/D%C3%A9signation_cha%C3%AEn%C3%A9e"},"chain\xe9es"),", c'est-\xe0-dire qu'on peut les mettre bout-\xe0-bout, car chacune renvoie une variable de type ",(0,n.kt)("em",{parentName:"p"},"Query Builder"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Fonction de rappel")),(0,n.kt)("p",null,"Certaines m\xe9thodes proposent d'utiliser une fonction de rappel (",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://fr.wikipedia.org/wiki/Fonction_de_rappel"},"callback function")),") pour ajouter des m\xe9thodes \xe0 la requ\xeate. La fonction re\xe7o\xeet la requ\xeate en param\xe8tre et doit retourner la requ\xeate, compl\xe9t\xe9e des m\xe9thodes que vous avez ajout\xe9es."),(0,n.kt)("h2",{id:"extraire-les-donn\xe9es"},"Extraire les donn\xe9es"),(0,n.kt)("p",null,"Je vais d'abord d\xe9crire les m\xe9thodes qui permettent d'extaire les informations (",(0,n.kt)("em",{parentName:"p"},"select statement"),") de la base de donn\xe9es."),(0,n.kt)("h3",{id:"select--addselect--selectraw"},"select() / addSelect() / selectRaw()"),(0,n.kt)("p",null,"Ces 3 m\xe9thodes indiquent \xe0 Eloquent les colonnes que l'on veut r\xe9cup\xe9rer (",(0,n.kt)("em",{parentName:"p"},"query statement"),")."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"select()")," et ",(0,n.kt)("strong",{parentName:"p"},"addSelect()")," n\xe9cessitent que l'on passe le nom des colonnes souhait\xe9es en param\xe8tres ; une liste de noms s\xe9par\xe9s par des virgules, ou dans un tableau. La deuxi\xe8me est \xe0 utiliser si l'on a d\xe9j\xe0 appel\xe9 la premi\xe8re, afin d'ajouter des colonnes non pr\xe9vues."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// on pr\xe9cise les colonnes attendues, sinon nous les auront toutes:\n$users =  User::select('id', 'first_name', 'last_name')->get();\n// ici on re\xe7oit une liste possible des colonnes par une variable (whereHas() est vu plus loin):\n$columns = ['age','date'];  // re\xe7u en param\xe8tre d'une m\xe9thode\n$users = User::select('id', 'first_name', 'last_name')->whereHas(count($colums)>0, function ($query) use ($columns) {\n    return $query->addSelect($columns); // on ajoute les colonnes\n})->get();\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"selectRaw()")," permet de d\xe9finir une colonne en langage SQL brut, ce qui peut \xeatre ^ratique si l'on veut utiliser une syntaxe impossible \xe0 \xe9crire avec les m\xe9thodes de ",(0,n.kt)("em",{parentName:"p"},"Query Builder"),". C'est une alternative \xe0 l'utilisation de ",(0,n.kt)("em",{parentName:"p"},"DB::raw()"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// permet d'ajouter une colonne indiquat si l'utilisateur est majeur:\n$users = User::select('id', 'first_name', 'last_name')->selectRaw('CASE age>18 THEN 1 ELSE 0 END AS _is_adult')->get();\n")),(0,n.kt)("h3",{id:"where--orwhere--wherein--orwherein--wherenotin--orwherenotin"},"where() / orWhere() / whereIn() / orWhereIn() / whereNotIn() / orWherenotIn()"),(0,n.kt)("p",null,"Toutes les m\xe9thodes commen\xe7ant par ",(0,n.kt)("em",{parentName:"p"},"where*")," permettent d'indiquer des conditions pour filtrer (conserver) les donn\xe9es correspondant aux crit\xe8res sp\xe9cifi\xe9s. Ces m\xe9thodes ont plusieurs signatures et les param\xe8tres pass\xe9s sont variables. Plusieurs possibilti\xe9s :"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"2 param\xe8tres, la colonne et la valeur qui doit \xeatre identique (comparaison d'\xe9galit\xe9)."),(0,n.kt)("li",{parentName:"ol"},"3 param\xe8tres, le 2\xe8me \xe9tant l'op\xe9rateur de comparaison (voir annexe)."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("del",{parentName:"li"},"2 param\xe8tres, avec une fonction de rappel."))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// 1. comparaison d'\xe9galit\xe9 implicite:\n$users = User::select('id', 'first_name', 'last_name')->where('age', 18)->get();\n\n// 2. comparaison explicite:\n$users = User::select('id', 'first_name', 'last_name')->where('age', '>=', 18)->get();\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"whereIn(), whereNotIn()")," v\xe9rifient que la valeur d'une colonne est ou n'est pas pr\xe9sente dans un tableau."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"$users = User::select('id', 'first_name', 'last_name')->where('status', ['active', 'idle','standby'])->get();\n$users = User::select('id', 'first_name', 'last_name')->whereNotIn('prefered_language', ['Cobol', 'C','Ada'])->get();\n")),(0,n.kt)("h3",{id:"wherebetween--orwherebetween--wherenotbetween--orwherenotbetween"},"whereBetween() / orWhereBetween() / whereNotBetween() / orWhereNotBetween()"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://laravel.com/api/5.8/Illuminate/Database/Query/Builder.html#method_whereBetween"},"whereBetween()"),", orWhereBetween(), whereNotBetween(), orWhereNotBetween()")," v\xe9rifient ou non une valeur num\xe9rique entre 2 bornes incluses."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// l'\xe2ge entre 18 et 100:\n$users = User::select('id', 'first_name', 'last_name')->whereBetween('age', [18, 100])->get();\n// l'\xe2ge hors 18 \xe0 100:\n$users = User::select('id', 'first_name', 'last_name')->whereNotBetween('age', [18, 100])->get();\n")),(0,n.kt)("h3",{id:"wherehas"},"whereHas()"),(0,n.kt)("p",null,"Cette m\xe9thode v\xe9rifie la pr\xe9sence d'une ou plusieurs relations avec le mod\xe8le interrog\xe9.\nPar exemple, si votre mod\xe8le  ",(0,n.kt)("em",{parentName:"p"},"User")," est li\xe9 \xe0 des ",(0,n.kt)("em",{parentName:"p"},"Article"),", vous pouvez vouloir n'avoir que les ",(0,n.kt)("em",{parentName:"p"},"User")," qui poss\xe8dent des ",(0,n.kt)("em",{parentName:"p"},"Articles"),", ou l'inverse."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"$user = User::whereHas('articles')->get();\n")),(0,n.kt)("h3",{id:"whereraw--orwhereraw"},"whereRaw() / orWhereRaw()"),(0,n.kt)("p",null,"Comme pour ",(0,n.kt)("strong",{parentName:"p"},"selectRaw()"),", on peut \xe9crire une condition avec la syntaxe SQL native."),(0,n.kt)("h3",{id:"wherenull--wherenotnull"},"whereNull() / wherenotNull()"),(0,n.kt)("h3",{id:"wheredate--wheremonth--"},"whereDate() / whereMonth() / ..."),(0,n.kt)("h3",{id:"whereexists"},"whereExists()"),(0,n.kt)("h3",{id:"with--withcasts"},"with() / withCasts"),(0,n.kt)("h3",{id:"having--havingbetween--groupby--havingraw--orhavingraw"},"having() / havingBetween() / groupBy() / havingRaw() / orHavingRaw()"),(0,n.kt)("h3",{id:"orderby--orderbyraw--latest--first--reorder--inrandomorder"},"orderBy() / orderByRaw() / latest() / first() / reorder() / inRandomOrder()"),(0,n.kt)("h3",{id:"load"},"load()"),(0,n.kt)("h2",{id:"modifier-les-donn\xe9es"},"Modifier les donn\xe9es"),(0,n.kt)("h3",{id:"create--createmany"},"create() / createMany()"),(0,n.kt)("h3",{id:"associate--dissociate"},"associate() / dissociate()"),(0,n.kt)("h3",{id:"save--savemany"},"save() / saveMany()"),(0,n.kt)("h3",{id:"attach--detach--sync--syncwithoutdetaching--toggle"},"attach() / detach() / sync() / syncWithoutDetaching() / Toggle()"),(0,n.kt)("h3",{id:"touch-soft-delete"},"touch() (soft delete)"),(0,n.kt)("h2",{id:"annexes"},"Annexes"),(0,n.kt)("h2",{id:"op\xe9rateurs-de-comparaison"},"Op\xe9rateurs de comparaison"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"=  : \xe9gal \xe0,"),(0,n.kt)("li",{parentName:"ul"},"<  : inf\xe9rieur \xe0,"),(0,n.kt)("li",{parentName:"ul"},">","  : sup\xe9rieur \xe0,"),(0,n.kt)("li",{parentName:"ul"},"<= : inf\xe9rieur ou \xe9gal \xe0,"),(0,n.kt)("li",{parentName:"ul"},">","= : sup\xe9rieur ou \xe9gal \xe0,"),(0,n.kt)("li",{parentName:"ul"},"!= : diff\xe9rent de.")),(0,n.kt)("h2",{id:"m\xe9thodes-de-rappel-callback"},"M\xe9thodes de rappel (",(0,n.kt)("em",{parentName:"h2"},"callback"),")"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"...\n    function($query){\n        $query->where('age', '>=', 18);\n    }\n...\n\n")))}d.isMDXComponent=!0}}]);